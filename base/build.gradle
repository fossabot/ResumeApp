apply plugin: 'com.android.feature'

android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion

    baseFeature true
    defaultConfig {
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode rootProject.ext.versionCode
        versionName rootProject.ext.versionName
    }
    buildTypes {
        release {
            minifyEnabled rootProject.ext.enableProguard
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

dependencies {
    feature project(':resumefeature')
    feature project(":githubfeature")
    feature project(":linkedinfeature")
    application project(':app')

    api "androidx.appcompat:appcompat:${rootProject.ext.androidXAppcompatVersion}"
    api "com.google.android.material:material:${rootProject.ext.androidXAppcompatVersion}"
    api "androidx.recyclerview:recyclerview:${rootProject.ext.androidXAppcompatVersion}"
    api "androidx.cardview:cardview:${rootProject.ext.androidXAppcompatVersion}"
    api "androidx.annotation:annotation:${rootProject.ext.androidXAppcompatVersion}"

    annotationProcessor "android.arch.lifecycle:compiler:${rootProject.ext.lifecycleVersion}"

    /* Square */
    api("com.squareup.picasso:picasso:2.5.2",
            "com.squareup.retrofit2:retrofit:2.1.0",
            "com.squareup.retrofit2:converter-gson:2.1.0",
            "com.jakewharton.picasso:picasso2-okhttp3-downloader:1.0.2",
            "com.google.code.gson:gson:${rootProject.ext.gsonVersion}")

    /* reactive */
    api("io.reactivex.rxjava2:rxandroid:${rootProject.ext.rxandroid}",
            "io.reactivex.rxjava2:rxjava:${rootProject.ext.rxjava}",
            "org.jetbrains:annotations-java5:15.0",
            "com.jakewharton.retrofit:retrofit2-rxjava2-adapter:1.0.0")

    /* Retrofit 2*/
    api("com.squareup.retrofit2:converter-gson:${rootProject.ext.retrofit}",
            "com.squareup.retrofit2:retrofit:${rootProject.ext.retrofit}")

    // Dagger2
    api "com.google.dagger:dagger:${rootProject.ext.dagger2Version}"
    annotationProcessor "com.google.dagger:dagger-compiler:${rootProject.ext.dagger2Version}"

    // Google Auto value
    annotationProcessor "com.google.auto.value:auto-value:${rootProject.ext.autovalueVersion}"
    api "com.google.auto.value:auto-value-annotations:${rootProject.ext.autovalueVersion}"
    // Google Auto value extension to support Parcelable
    annotationProcessor "com.ryanharter.auto.value:auto-value-parcel:${rootProject.ext.autovalueParcelVersion}"
    // Google Auto value extension to support gson parsing
    annotationProcessor 'com.ryanharter.auto.value:auto-value-gson:0.8.0'
    api 'com.ryanharter.auto.value:auto-value-gson-annotations:0.8.0'

}
